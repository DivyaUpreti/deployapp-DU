
name: Deploy Dockerized Hello World App to GKE

on:
  push:
    branches:
      - main

jobs:
  build_and_push:
    name: Build and Push Docker Image to GCR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Google Cloud credentials
        uses: google-github-actions/setup-gcloud@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}
          project_id: ${{ secrets.GOOGLE_PROJECT }}
          zone: ${{ secrets.GOOGLE_ZONE }}
          install_components: 'gke-gcloud-auth-plugin'

      - name: Build Docker image
        run: |
           gcloud auth configure-docker us-west1-a-docker.pkg.dev
           docker build -t us-west1-a-docker.pkg.dev/$GOOGLE_PROJECT/hello-world/nginx:latest .
        
      - name: Push Docker image to GCR
        run: |
           docker push us-west1-a-docker.pkg.dev/$GOOGLE_PROJECT/hello-world/nginx:latest

  terraform:
    name: Set up GKE Cluster with Terraform
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Google Cloud credentials
        uses: google-github-actions/setup-gcloud@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}
          project_id: ${{ secrets.GOOGLE_PROJECT }}
          zone: ${{ secrets.GOOGLE_ZONE}}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.4.6

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve

      
  deploy:
    name: Deploy Application to GKE
    runs-on: ubuntu-latest
    needs: terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up kubectl
        uses: google-github-actions/setup-kubectl@v2

      - name: Apply Kubernetes deployment
        run: kubectl apply -f hello-world-deployment.yaml

  wait_for_loadbalancer:
    name: Wait for LoadBalancer IP
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Wait for LoadBalancer IP
        run: |
          while ! kubectl get svc hello-world-service | grep "EXTERNAL-IP" | grep -v "<pending>"; do
            echo "Waiting for LoadBalancer IP...";
            sleep 10;
          done
          echo "LoadBalancer IP is ready"